{"version":3,"sources":["components/Footer.js","pages/loginPage.js","pages/successPage.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","React","createElement","style","display","justifyContent","padding","backgroundColor","color","href","target","rel","src","concat","process","alt","height","marginRight","supabase","createClient","Login","navigate","useNavigate","auth","onAuthStateChange","async","event","session","user","user_metadata","sub","className","Auth","supabaseClient","appearance","theme","ThemeSupa","showLinks","providers","autoPlay","loop","muted","type","Success","setUser","useState","useEffect","data","getUser","discordId","proxyResponse","fetch","method","headers","Content-Type","body","JSON","stringify","discordID","cnftData","json","marsbirds","stakeKey","notOnSale","assets","response","console","log","message","error","updateUserData","getUserData","Object","keys","length","Fragment","width","border","onClick","signOut","signOutUser","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4173f6df.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer style={{ display: 'flex', justifyContent: 'space-between', padding: '20px', backgroundColor: '#000000', color: 'white' }}>\r\n      <div>\r\n        <a href=\"https://www.marsbirds.art/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img src={`${process.env.PUBLIC_URL}/assets/gold-logo.svg`} alt=\"Logo\" style={{ height: '50px' }} />\r\n        </a>\r\n      </div> \r\n      <div>\r\n        <a href=\"https://discord.gg/Ph7bNcVCgf\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img src={`${process.env.PUBLIC_URL}/assets/gold-discord-32.svg`} alt=\"Discord\" style={{ height: '24px', marginRight: '10px' }} />\r\n        </a>\r\n        <a href=\"https://twitter.com/mars_birds\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img src={`${process.env.PUBLIC_URL}/assets/gold-twitter-32.svg`} alt=\"Twitter\" style={{ height: '24px' }} />\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { Auth } from '@supabase/auth-ui-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ThemeSupa } from '@supabase/auth-ui-shared';\r\nimport Footer from '../components/Footer.js';\r\n\r\nconst supabase = createClient(\r\n    process.env.REACT_APP_SUPABASE_URL,\r\n    process.env.REACT_APP_SUPABASE_ANON_KEY\r\n)\r\n\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n\r\n  supabase.auth.onAuthStateChange(async (event, session) => {\r\n        if (event === \"SIGNED_IN\") {\r\n            \r\n            const discordId = session.user.user_metadata.sub;\r\n            // console.log(\"Discord ID:\", discordId);\r\n\r\n            navigate(\"/success\");\r\n        }\r\n    });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Auth\r\n            supabaseClient={supabase}\r\n            appearance={{ theme: ThemeSupa }}\r\n            showLinks={false}\r\n            providers={[\"discord\"]}\r\n        />\r\n      </header>\r\n      <div className=\"video-container\">\r\n        <video autoPlay loop muted>\r\n          <source src=\"/assets/marsvideo.webm\" type=\"video/webm\" />\r\n          Your browser does not support the video tag.\r\n        </video>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { createClient } from '@supabase/supabase-js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Footer from '../components/Footer.js';\r\n\r\nconst supabase = createClient(\r\n    process.env.REACT_APP_SUPABASE_URL,\r\n    process.env.REACT_APP_SUPABASE_ANON_KEY\r\n)\r\n\r\nfunction Success() {\r\n  const [user, setUser] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const gameUrl = \"URL_OF_YOUR_UNREAL_ENGINE_GAME\";\r\n\r\n  useEffect(() => {\r\n    async function getUserData() {\r\n        const { data: { user } } = await supabase.auth.getUser();\r\n        if(user) {\r\n            const discordId = user.user_metadata.sub;\r\n            // console.log(\"Discord ID:\", discordId);\r\n\r\n            // Call function to update user data\r\n            updateUserData(discordId);\r\n\r\n            setUser(user);\r\n        }\r\n    }\r\n    getUserData();\r\n  }, []);\r\n\r\n  async function updateUserData(discordId) {\r\n    try {\r\n        // Fetch MarsBirds data from CNFT API\r\n        const proxyResponse = await fetch('https://droplet.marsbirds.art/cnft-proxy', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ discordID: discordId })\r\n        });\r\n        const cnftData = await proxyResponse.json();\r\n\r\n        // Find the MarsBirds IDs associated with the discordId\r\n        let marsbirds = [];\r\n        for (let stakeKey in cnftData.notOnSale) {\r\n          if (cnftData.notOnSale[stakeKey].discordID === discordId) {\r\n            marsbirds = cnftData.notOnSale[stakeKey].assets;\r\n            break;\r\n          }\r\n        }\r\n\r\n        // Update user data on your server\r\n        const response = await fetch('https://droplet.marsbirds.art/update-user', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ discordId: discordId, marsbirds: marsbirds })\r\n        });\r\n\r\n        const data = await response.json();\r\n        console.log(data.message);\r\n    } catch (error) {\r\n        console.error('Error updating user data:', error);\r\n    }\r\n  }\r\n\r\n  async function signOutUser() {\r\n      const { error } = await supabase.auth.signOut();\r\n      navigate(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {Object.keys(user).length !== 0 ?\r\n          <>\r\n            <div className=\"game-container\">\r\n              <iframe \r\n                src={gameUrl}\r\n                width=\"800\"\r\n                height=\"600\"\r\n                style={{ border: 'none' }}\r\n              />\r\n            </div>\r\n            <button onClick={() => signOutUser()} className=\"signOutButton\">\r\n              <span className=\"profileIcon\"></span> Sign Out\r\n            </button>\r\n          </>\r\n          :\r\n          <>\r\n            <h1>User is not logged in</h1>\r\n            <button onClick={() => { navigate(\"/\") }} className=\"signOutButton\">\r\n              Go back home!\r\n            </button>\r\n          </>\r\n        }\r\n      </header>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Login from './pages/loginPage';\nimport Success from './pages/successPage';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Login />} />\n        <Route path=\"/success\" element={<Success />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}